[{"/Users/chad/Code/covalent/src/index.js":"1","/Users/chad/Code/covalent/src/components/BrowserUnsupported/BrowserUnsupported.js":"2","/Users/chad/Code/covalent/src/components/App/App.js":"3","/Users/chad/Code/covalent/src/api.js":"4","/Users/chad/Code/covalent/src/CallObjectContext.js":"5","/Users/chad/Code/covalent/src/logUtils.js":"6","/Users/chad/Code/covalent/src/urlUtils.js":"7","/Users/chad/Code/covalent/src/components/Call/Call.js":"8","/Users/chad/Code/covalent/src/components/StartButton/StartButton.js":"9","/Users/chad/Code/covalent/src/components/Tray/Tray.js":"10","/Users/chad/Code/covalent/src/components/Call/callState.js":"11","/Users/chad/Code/covalent/src/components/CallMessage/CallMessage.js":"12","/Users/chad/Code/covalent/src/components/Tile/Tile.js":"13","/Users/chad/Code/covalent/src/components/TrayButton/TrayButton.js":"14","/Users/chad/Code/covalent/src/components/Tile/AudioInputVolume.js":"15","/Users/chad/Code/covalent/src/components/Icon/Icon.js":"16","/Users/chad/Code/covalent/src/components/Tile/MuteStateUtil.js":"17"},{"size":1598,"mtime":1613152684622,"results":"18","hashOfConfig":"19"},{"size":471,"mtime":1605648058000,"results":"20","hashOfConfig":"19"},{"size":10068,"mtime":1614897703418,"results":"21","hashOfConfig":"19"},{"size":1035,"mtime":1605648058000,"results":"22","hashOfConfig":"19"},{"size":66,"mtime":1605648058000,"results":"23","hashOfConfig":"19"},{"size":82,"mtime":1605648058000,"results":"24","hashOfConfig":"19"},{"size":342,"mtime":1605648058000,"results":"25","hashOfConfig":"19"},{"size":4666,"mtime":1607705942200,"results":"26","hashOfConfig":"19"},{"size":336,"mtime":1605648058000,"results":"27","hashOfConfig":"19"},{"size":3477,"mtime":1611179267598,"results":"28","hashOfConfig":"19"},{"size":4540,"mtime":1605648058000,"results":"29","hashOfConfig":"19"},{"size":369,"mtime":1605648058000,"results":"30","hashOfConfig":"19"},{"size":1888,"mtime":1612369518352,"results":"31","hashOfConfig":"19"},{"size":664,"mtime":1605648058000,"results":"32","hashOfConfig":"19"},{"size":5210,"mtime":1607973475771,"results":"33","hashOfConfig":"19"},{"size":5757,"mtime":1605648058000,"results":"34","hashOfConfig":"19"},{"size":3683,"mtime":1607701246822,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"q2xam8",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"39"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"39"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"39"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"/Users/chad/Code/covalent/src/index.js",["75","76","77","78"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport BrowserUnsupported from './components/BrowserUnsupported/BrowserUnsupported';\nimport DailyIframe from '@daily-co/daily-js';\n\nvar ws = new WebSocket('ws://localhost:3434/ws')\n\n\nws.onmessage = (msg) => {\n  console.log(\"message received: \", msg)\n  try {\n    var m = JSON.parse(msg.data)\n    console.log(\"action: \", m.action)\n    console.log(\"event: \", m.event)\n    // only catch keyDown, leave keyUp for the other handlers\n    handleSDEvent(m.action, m.event)\n  } catch (e) {\n    console.log(\"error processing websocket message: \", e)\n  }\n}\n\n\n\nasync function handleSDEvent(action, event) {\nswitch(event) {\n  case \"keyDown\":\n  switch(action) {\n    case \"com.chadbailey.covalent.cam\":\n    setCam()\n    ws.send('foo')\n    break\n    case \"com.chadbailey.covalent.mic\":\n    setMic()\n    break\n    case \"com.chadbailey.covalent.both\":\n    break\n  }\n  break\n  \n  case \"keyUp\":\n  break\n}\n}\n\n\nfunction getMic() {\n  return window.callFrame.localAudio()\n}\n\nfunction getCam() {\n  return window.callFrame.localVideo()\n}\n\nfunction getBothState() {\n  \n}\n\nfunction setMic(s) {\n  if (s === undefined) s = !getMic();\n  console.log(\"setting mic to \", s)\n  window.callFrame.setLocalAudio(s)\n}\n\nfunction setCam(s) {\n  \n  if (s === undefined) s = !getCam();\n  console.log(\"setting cam to \", s)\n  window.callFrame.setLocalVideo(s)\n}\n\nfunction setBoth() {\n  \n}\n\nReactDOM.render(\n  DailyIframe.supportedBrowser().supported ? <App /> : <BrowserUnsupported />,\n  document.getElementById('root')\n);\n",["79","80"],"/Users/chad/Code/covalent/src/components/BrowserUnsupported/BrowserUnsupported.js",[],"/Users/chad/Code/covalent/src/components/App/App.js",["81","82","83","84","85","86","87","88"],"/Users/chad/Code/covalent/src/api.js",["89"],"const newRoomEndpoint =\n  'https://fu6720epic.execute-api.us-west-2.amazonaws.com/default/dailyWwwApiDemoNewCall';\n\n/**\n * Create a short-lived room for demo purposes.\n *\n * IMPORTANT: this is purely a \"demo-only\" API, and *not* how we recommend\n * you create rooms in real production code. In your code, we recommend that you:\n * - Create rooms by invoking the Daily REST API from your own backend server\n *   (or from the Daily dashboard if you're OK with creating rooms manually).\n * - Pass an \"exp\" (expiration) parameter to the Daily REST endpoint so you\n *   don't end up with a huge number of live rooms.\n *\n * See https://docs.daily.co/reference#create-room for more information on how\n * to use the Daily REST API to create rooms.\n */\nasync function createRoom() {\n  let response = await fetch(newRoomEndpoint),\n    room = await response.json();\n  return room;\n\n  // Comment out the above and uncomment the below, using your own URL\n  // return { url: \"https://your-domain.daily.co/hello\" };\n}\n\nexport default { createRoom };\n","/Users/chad/Code/covalent/src/CallObjectContext.js",[],"/Users/chad/Code/covalent/src/logUtils.js",[],"/Users/chad/Code/covalent/src/urlUtils.js",[],"/Users/chad/Code/covalent/src/components/Call/Call.js",[],"/Users/chad/Code/covalent/src/components/StartButton/StartButton.js",[],"/Users/chad/Code/covalent/src/components/Tray/Tray.js",[],"/Users/chad/Code/covalent/src/components/Call/callState.js",[],"/Users/chad/Code/covalent/src/components/CallMessage/CallMessage.js",[],"/Users/chad/Code/covalent/src/components/Tile/Tile.js",["90","91","92"],"import React, { useEffect, useRef } from 'react';\nimport './Tile.css';\nimport AudioInputVolume from './AudioInputVolume';\n\n/**\n * Props\n * - videoTrack: MediaStreamTrack?\n * - audioTrack: MediaStreamTrack?\n * - isLocalPerson: boolean\n * - isLarge: boolean\n * - isLoading: boolean\n * - onClick: Function\n */\nexport default function Tile(props) {\n  const videoEl = useRef(null);\n  const audioEl = useRef(null);\n\n  /**\n   * When video track changes, update video srcObject\n   */\n  useEffect(() => {\n    videoEl.current &&\n      (videoEl.current.srcObject = new MediaStream([props.videoTrack]));\n  }, [props.videoTrack]);\n\n  /**\n   * When audio track changes, update audio srcObject\n   */\n  useEffect(() => {\n    audioEl.current &&\n      (audioEl.current.srcObject = new MediaStream([props.audioTrack]));\n  }, [props.audioTrack]);\n\n  function getLoadingComponent() {\n    return props.isLoading && <p className=\"loading\">Loading...</p>;\n  }\n\n  function getVideoComponent() {\n    return (\n      props.videoTrack && <video autoPlay muted playsInline ref={videoEl} />\n    );\n  }\n\n  function getAudioComponent() {\n    return (\n      !props.isLocalPerson &&\n      props.audioTrack && <audio autoPlay playsInline ref={audioEl} />\n    );\n  }\n\n  function getClassNames() {\n    let classNames = 'tile';\n    classNames += props.isLarge ? ' large' : ' small';\n    props.isLocalPerson && (classNames += ' local');\n    return classNames;\n  }\n  \n  function getVideoInfo() {\n    return (\n      <div style=\"float: right\">480p</div>\n      )  \n  }\n\n  return (\n    <div className={getClassNames()} onClick={props.onClick}>\n      <div className=\"background\" />\n      {getLoadingComponent()}\n      {getVideoComponent()}\n      {getAudioComponent()}\n      {/* <div className='volumeIndicator'>\n        <AudioInputVolume  stream={props.audioTrack} />\n      </div> */}\n      {/* {getVideoInfo()} */}\n    </div>\n  );\n}\n","/Users/chad/Code/covalent/src/components/TrayButton/TrayButton.js",[],"/Users/chad/Code/covalent/src/components/Tile/AudioInputVolume.js",["93","94"],"import React, { Component } from 'react';\nimport styled from 'styled-components';\n\n//import { getAudioInputVolume, onLevelChange } from './AudioInputOutputUtil';\nimport * as MU from './MuteStateUtil';\n\nclass AudioInputVolume extends Component {\n  constructor(props) {\n\tsuper(props);\n\tconsole.log(\"!!! in constructor\")\n\tthis.timer = 0;\n\n\tthis.state = {\n\t  audioInputVolume: 0.0,\n\t  calculated: 0.0,\n\t  meter: null,\n\t  mediaStreamSource: null\n\t};\n  }\n\n  startTimer = () => {\n\tif (!this.unmount) {\n\t  if (this.timer === 0) {\n\t\tthis.timer = setInterval(this.changeVolume, 150);\n\t  }\n\t}\n  };\n\n  changeVolume = () => {\n\tlet audioInputVolume = this.onLevelChange();\n\tif (!this.unmount) {\n\t  this.setState({\n\t\taudioInputVolume,\n\t  });\n\t}\n  };\n\n  componentDidMount = () => {\n\tif (!this.checkForMuted()) {\n\t  this.startTimer();\n\t}\n  };\n\n  UNSAFE_componentWillMount = () => {\n\tthis.unmount = false;\n\n\t// debugging -- use the volume meter to make sure we're getting\n\t// bytes on a peer connection\n\t// if (window.testStream) {\n\t//   getAudioInputVolume(window.testStream);\n\t//   return;\n\t// }\n\n\tif (!this.checkForMuted()) {\n\t  this.getAudioInputVolume(this.props.stream);\n\t}\n  };\n\n  componentWillUnmount = () => {\n\tthis.unmount = true;\n\tclearTimeout(this.timerTimeout);\n  };\n\n  calculateBarHeight = () => {\n\tlet calculated = this.state.audioInputVolume * 10000 + 4;\n\tif (calculated >= 4 && calculated < 7) {\n\t  calculated = 4;\n\t} else if (calculated > 7 && calculated < 11) {\n\t  calculated = 6;\n\t} else if (calculated > 11 && calculated < 50) {\n\t  calculated = 8;\n\t} else if (calculated > 50 && calculated < 200) {\n\t  calculated = 10;\n\t} else if (calculated > 200 && calculated < 1000) {\n\t  calculated = 12;\n\t} else {\n\t  calculated = 14;\n\t}\n\treturn calculated;\n  };\n\n  checkForMuted = () => {\n\tif (\n\t  MU.blocked(this.props.audioState) ||\n\t  MU.notPresent(this.props.audioState) ||\n\t  MU.isUserMuted(this.props.audioState)\n\t) {\n\t  return true;\n\t}\n\treturn false;\n  };\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n\tthis.getAudioInputVolume(nextProps.stream);\n  }\n  \n  getAudioInputVolume = (stream) => {\n\t  // cb: i'm scared of this\n\t  //window.audioContext = new AudioContext();\n\t  //wait for it to be created?\n\t  console.log(\"going to check stream: \", stream)\n\tif (window.audioContext !== null && stream !== null && stream !== false) {\n\t\t// Create an AudioNode from the stream.\n\t\tconsole.log(\"we have a context! stream: \", stream);\n\t\tconst ms = new MediaStream([stream]);\n\t\tthis.state.mediaStreamSource = window.audioContext.createMediaStreamSource(ms);\n\t\t  // Create a new volume meter and connect it.\n\t\t  this.state.meter = this.createAudioMeter(window.audioContext);\n\t\t  this.state.mediaStreamSource.connect(this.state.meter);\n\t\tconsole.log(\"mediaStreamSource: \", this.state.mediaStreamSource);\n\t\t\n\t\t  // Trigger callback that shows the level of the \"Volume Meter\"\n\t\t  this.onLevelChange();\n\t}\n  \n  }\n  \n  onLevelChange = () => {\n\t  if (this.state.meter !== null && this.state.meter.volume !== null) {\n\t\t  //console.log(\"volume: \", this.state.meter);\n\t\t  return this.state.meter.volume.toFixed(10);\n\t  } else {\n\t\t  //console.log(\"volume: 0. :(\")\n\t\t  return 0;\n\t  }\n  }\n  \n  createAudioMeter = (audioContext, clipLevel, averaging, clipLag) => {\n\tvar processor = audioContext.createScriptProcessor(512);\n\tprocessor.onaudioprocess = this.volumeAudioProcess;\n\tprocessor.averaging = averaging || 0.95;\n\tprocessor.volume = 0;\n  \n\t// this will have no effect, since we don't copy the input to the output,\n\t// but works around a current Chrome bug.\n\tprocessor.connect(audioContext.destination);\n  \n\tprocessor.shutdown = function () {\n\t  this.disconnect();\n\t  this.onaudioprocess = null;\n\t};\n  \n\treturn processor;\n  }\n  \n  volumeAudioProcess  = (event) => {\n\tvar buf = event.inputBuffer.getChannelData(0);\n\tvar bufLength = buf.length;\n\tvar sum = 0;\n\tvar x;\n  \n\t// Do a root-mean-square on the samples: sum up the squares...\n\tfor (var i = 0; i < bufLength; i++) {\n\t  x = buf[i];\n\t  sum += x * x;\n\t}\n  \n\t// ... then take the square root of the sum.\n\tvar rms = Math.sqrt(sum / bufLength);\n  \n\t// Now smooth this out with the averaging factor applied\n\t// to the previous sample - take the max here because we\n\t// want \"fast attack, slow release.\"\n\tthis.volume = Math.max(rms, this.volume * this.averaging);\n  }\n\n  render() {\n\tlet color = this.checkForMuted() ? '#8897a8' : '#f7b211';\n\tlet height = this.checkForMuted() ? 4 : this.calculateBarHeight();\n\treturn (\n\t  <Wrapper>\n\t\t<VolumeBar height={height} color={color} />\n\t\t<VolumeBar height={height === 4 ? height : height + 6} color={color} />\n\t\t<VolumeBar height={height} color={color} />\n\t  </Wrapper>\n\t);\n  }\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 8px;\n`;\n\nconst VolumeBar = styled.div`\n  width: 4px;\n  height: ${({ height }) => height}px;\n  background-color: ${({ color }) => color};\n  border-radius: 100px;\n  transition: all 0.2s;\n\n  &:not(:last-of-type) {\n\tmargin-right: 2px;\n  }\n`;\n\n/*\nexport default connect((state) => ({\n  stream: state.local.streams.cam && state.local.streams.cam.stream,\n  audioState: state.local.public.audioState,\n}))(AudioInputVolume);\n*/\n\nexport default AudioInputVolume;","/Users/chad/Code/covalent/src/components/Icon/Icon.js",[],"/Users/chad/Code/covalent/src/components/Tile/MuteStateUtil.js",[],{"ruleId":"95","severity":1,"message":"96","line":27,"column":1,"nodeType":"97","messageId":"98","endLine":44,"endColumn":2},{"ruleId":"95","severity":1,"message":"96","line":29,"column":3,"nodeType":"97","messageId":"98","endLine":39,"endColumn":4},{"ruleId":"99","severity":1,"message":"100","line":56,"column":10,"nodeType":"101","messageId":"102","endLine":56,"endColumn":22},{"ruleId":"99","severity":1,"message":"103","line":73,"column":10,"nodeType":"101","messageId":"102","endLine":73,"endColumn":17},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"99","severity":1,"message":"108","line":3,"column":8,"nodeType":"101","messageId":"102","endLine":3,"endColumn":19},{"ruleId":"99","severity":1,"message":"109","line":8,"column":30,"nodeType":"101","messageId":"102","endLine":8,"endColumn":48},{"ruleId":"99","severity":1,"message":"110","line":32,"column":9,"nodeType":"101","messageId":"102","endLine":32,"endColumn":19},{"ruleId":"99","severity":1,"message":"111","line":225,"column":9,"nodeType":"101","messageId":"102","endLine":225,"endColumn":26},{"ruleId":"99","severity":1,"message":"112","line":227,"column":9,"nodeType":"101","messageId":"102","endLine":227,"endColumn":22},{"ruleId":"99","severity":1,"message":"113","line":259,"column":9,"nodeType":"101","messageId":"102","endLine":259,"endColumn":12},{"ruleId":"99","severity":1,"message":"114","line":273,"column":9,"nodeType":"101","messageId":"102","endLine":273,"endColumn":21},{"ruleId":"99","severity":1,"message":"115","line":279,"column":9,"nodeType":"101","messageId":"102","endLine":279,"endColumn":20},{"ruleId":"116","severity":1,"message":"117","line":26,"column":1,"nodeType":"118","endLine":26,"endColumn":31},{"ruleId":"99","severity":1,"message":"119","line":3,"column":8,"nodeType":"101","messageId":"102","endLine":3,"endColumn":24},{"ruleId":"99","severity":1,"message":"120","line":58,"column":12,"nodeType":"101","messageId":"102","endLine":58,"endColumn":24},{"ruleId":"121","severity":1,"message":"122","line":60,"column":12,"nodeType":"123","endLine":60,"endColumn":32},{"ruleId":"124","severity":1,"message":"125","line":106,"column":3,"nodeType":"126","endLine":106,"endColumn":13},{"ruleId":"124","severity":1,"message":"125","line":108,"column":5,"nodeType":"126","endLine":108,"endColumn":15},"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'getBothState' is defined but never used.","Identifier","unusedVar","'setBoth' is defined but never used.","no-native-reassign",["127"],"no-negated-in-lhs",["128"],"'StartButton' is defined but never used.","'pageUrlFromRoomUrl' is defined but never used.","'createCall' is assigned a value but never used.","'enableStartButton' is assigned a value but never used.","'updateRoomUrl' is assigned a value but never used.","'obj' is assigned a value but never used.","'handleStream' is assigned a value but never used.","'handleError' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'AudioInputVolume' is defined but never used.","'getVideoInfo' is defined but never used.","react/style-prop-object","Style prop value must be an object","JSXAttribute","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-global-assign","no-unsafe-negation"]